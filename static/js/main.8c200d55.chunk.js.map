{"version":3,"sources":["hooks/useAuth.tsx","containers/Login/index.tsx","components/AddListForm/index.tsx","components/DroppableList/index.tsx","components/Board/index.tsx","containers/Home/index.tsx","App.tsx","reportWebVitals.ts","containers/Navigation/index.tsx","index.tsx"],"names":["TOKEN_ALS_NAME","API_URL","authContextEmpty","authState","setAuth","auth","getAuthState","AuthContext","createContext","configureAxiosHeaders","axios","defaults","headers","post","token","get","AuthProvider","children","useState","setAuthState","useCallback","authDataString","localStorage","getItem","authData","JSON","parse","err","setItem","stringify","error","Promise","reject","useEffect","Provider","value","Login","useContext","status","setStatus","username","setUsername","password","setPassword","navigate","useNavigate","submitJWT","event","a","preventDefault","body","mode","then","r","data","catch","e","Form","onSubmit","className","Group","controlId","Label","Control","autoFocus","type","onChange","target","Button","size","disabled","length","AddListForm","openButtonName","addButtonName","closeButtonName","placeholder","submitFormCallback","buttonTextColor","name","setName","clicked","setClicked","errorMsg","setErrorMsg","submitForm","setClickedCallback","state","variant","onClick","DroppableList","id","items","listName","setListName","submitNameChange","console","log","onBlur","onKeyDown","key","droppableId","provided","droppableProps","ref","innerRef","map","item","index","draggableId","snapshot","draggableProps","dragHandleProps","content","resolve","Math","random","setTimeout","Board","columns","setColumns","toastNode","setToastNode","dataGetter","message","onDragEnd","result","destination","source","newColumns","sourceColumn","find","destColumn","destItems","splice","removed","column","color","height","width","Toast","bg","onClose","show","Boolean","delay","autohide","Header","Body","Main","App","path","element","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navigation","Navbar","expand","Container","Brand","href","Nav","Link","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c200d55.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useState, ReactNode, useCallback, useEffect } from \"react\";\r\n\r\nconst TOKEN_ALS_NAME = 'auth';\r\nconst API_URL = 'https://146.59.45.158:8080';\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n}\r\ntype Auth = {\r\n  username: string;\r\n  token: string;\r\n}\r\ntype AuthContextProps = {\r\n  authState: Auth | null;\r\n  setAuth: (auth: Auth | null) => void;\r\n  getAuthState: () => Auth | null;\r\n};\r\n\r\nconst authContextEmpty: AuthContextProps = {\r\n  authState: null,\r\n  setAuth: (auth: Auth | null) => null,\r\n  getAuthState: () => null\r\n}\r\n\r\nconst AuthContext = createContext(authContextEmpty);\r\n\r\nconst configureAxiosHeaders = (auth: Auth) => {\r\n  axios.defaults.headers.post[\"Authorization\"] = auth.token;\r\n  //axios.defaults.headers.post[\"mode\"] = 'cors';\r\n\r\n  axios.defaults.headers.get[\"Authorization\"] = auth.token;\r\n  //axios.defaults.headers.get[\"mode\"] = 'no-cors';\r\n  axios.defaults.headers.get[\"Content-Type\"] = 'application/x-www-form-urlencoded';\r\n};\r\n\r\nconst AuthProvider = ({ children }: Props) => {\r\n  const [authState, setAuthState] = useState<Auth | null>(null);\r\n\r\n  // Get current auth state from AsyncStorage\r\n  const getAuthState = useCallback(() => {\r\n    try {\r\n      const authDataString = localStorage.getItem(TOKEN_ALS_NAME);\r\n      if (!authDataString)\r\n        throw \"No data in local storage\";\r\n      const authData = JSON.parse(authDataString) as Auth;\r\n      // Configure axios headers\r\n      configureAxiosHeaders(authData);\r\n      setAuthState(authData);\r\n\r\n      return authData;\r\n    } catch (err) {\r\n      setAuthState(null);\r\n    }\r\n    return null;\r\n  }, []);\r\n\r\n  // Update AsyncStorage & context state\r\n  const setAuth = useCallback((auth: Auth | null) => {\r\n    try {\r\n      localStorage.setItem(TOKEN_ALS_NAME, JSON.stringify(auth));\r\n      // Configure axios headers\r\n      if (auth)\r\n        configureAxiosHeaders(auth);\r\n      setAuthState(auth);\r\n    } catch (error) {\r\n      setAuthState(null);\r\n      Promise.reject(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAuthState();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authState, setAuth, getAuthState }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext, AuthProvider, TOKEN_ALS_NAME, API_URL };\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Form } from 'react-bootstrap';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { API_URL, TOKEN_ALS_NAME, AuthContext } from '../../hooks/useAuth'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const { authState, setAuth } = useContext(AuthContext);\r\n  const [status, setStatus] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const submitJWT = async (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n\r\n    const body = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n    const headers = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      mode: 'cors'\r\n    }\r\n    await axios.post(`${API_URL}/public/login`, body, headers)\r\n      .then(r => {\r\n        const { data } = r;\r\n        localStorage.setItem(TOKEN_ALS_NAME, JSON.stringify(data));\r\n        setAuth(data);\r\n        navigate('/');\r\n      })\r\n      .catch(e => {\r\n        setStatus('Username or password are invalid');\r\n        setAuth(null);\r\n      });\r\n  };\r\n\r\n  useEffect(() => { authState && navigate('/') }, []);\r\n\r\n  return (\r\n    <Form onSubmit={submitJWT} className=\"bg-trello h-[100vh] w-[100%] flex justify-center flex-col\">\r\n      <div className=\"w-80 mx-auto my-0 flex flex-col align-middle\">\r\n        <Form.Group controlId=\"username\" className=\"p-2 text-white\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\" className=\"p-2 text-white\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button className=\"m-4\" size=\"lg\" type=\"submit\" disabled={!(username.length > 0 && password.length > 0)}>\r\n          Sign-in\r\n        </Button>\r\n        <p className=\"text-center text-white bg-[#ff000066] rounded-lg\">{status}</p>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { ReactNode, useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\ntype AddListButtonProps = {\r\n  openButtonName: string;\r\n  addButtonName: string;\r\n  closeButtonName: string;\r\n  placeholder: string;\r\n  submitFormCallback: (name: string) => Promise<string>;\r\n  className?: string;\r\n  buttonTextColor?: string;\r\n};\r\n\r\nconst AddListForm = ({ openButtonName, addButtonName, closeButtonName, placeholder, submitFormCallback, className, buttonTextColor }: AddListButtonProps) => {\r\n  const [name, setName] = useState('');\r\n  const [clicked, setClicked] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState<string | null>(null);\r\n\r\n  const submitForm = async (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n    try {\r\n      await submitFormCallback(name);\r\n      setClicked(false);\r\n    } catch (e) {\r\n      setErrorMsg(\"Error. Try again.\");\r\n    }\r\n  };\r\n\r\n  const setClickedCallback = (state: boolean) => {\r\n    setClicked(state);\r\n    setErrorMsg(null);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitForm} className={className}>\r\n      {!clicked ?\r\n        (\r\n          <button\r\n            className={`!bg-[#ffffff3a] hover:!bg-[#0000009a] btn w-[100%] text-gray-200 ${buttonTextColor}`}\r\n            onClick={() => setClickedCallback(true)}\r\n          >\r\n            {openButtonName}\r\n          </button>\r\n        )\r\n        :\r\n        (\r\n          <div className=\"bg-[#ebecf0] p-1\">\r\n            <Form.Group controlId=\"name\" className=\"m-2\">\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"name\"\r\n                value={name}\r\n                placeholder={placeholder}\r\n                onChange={e => setName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button className=\"m-2\" size=\"sm\" type=\"submit\" disabled={name.length === 0}>\r\n              {addButtonName}\r\n            </Button>\r\n            <Button className=\"m-2\" size=\"sm\" variant=\"danger\" onClick={() => setClickedCallback(false)}>\r\n              {closeButtonName}\r\n            </Button>\r\n            {errorMsg &&\r\n              <Form.Group className=\"m-2 text-red-500\">\r\n                {errorMsg}\r\n              </Form.Group>\r\n            }\r\n          </div>\r\n        )\r\n      }\r\n    </Form >\r\n  )\r\n};\r\n\r\nexport default AddListForm;\r\n","import React, { ReactNode, useCallback, useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport AddListForm from '../AddListForm';\r\n\r\nimport { BackendBoardColumns } from '../Board'\r\n\r\n\r\nconst DroppableList = ({ id, name, items }: BackendBoardColumns) => {\r\n  const [listName, setListName] = useState(name);\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const submitNameChange = () => {\r\n    console.log(listName)\r\n    setClicked(false);\r\n  }\r\n\r\n  const submitFormCallback = (name: string): Promise<string> => {\r\n    return new Promise((resolve, reject) => {\r\n      if (Math.random() <= 0.5)\r\n        throw \"error\";\r\n      setTimeout(() => resolve(\"done\"), 1);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-[272px] bg-[#ebecf0] m-2 h-[fit-content]\">\r\n      <div className=\"w-[100%] p-2\">\r\n        {!clicked ?\r\n          <button className=\"w-[100%] font-bold\" onClick={() => setClicked(true)}>\r\n            {listName}\r\n          </button>\r\n          :\r\n          <input className=\"w-[100%]\"\r\n            onChange={e => setListName(e.target.value)}\r\n            onSubmit={submitNameChange}\r\n            onBlur={submitNameChange}\r\n            onKeyDown={e => e.key === 'Enter' && submitNameChange()}\r\n            type=\"text\"\r\n            autoFocus\r\n            value={listName}\r\n          />\r\n        }\r\n      </div>\r\n\r\n      <Droppable droppableId={id} key={`${id}${name}`}>\r\n        {provided =>\r\n          <div\r\n            className=\"w-[272px] min-h-[30px]\"\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {items.map((item, index) =>\r\n              <Draggable\r\n                key={item.id}\r\n                draggableId={item.id}\r\n                index={index}\r\n              >\r\n                {(provided, snapshot) =>\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    className=\"bg-white rounded-sm m-2 p-3\"\r\n                  >\r\n                    {item.content}\r\n                  </div>\r\n                }\r\n              </Draggable>\r\n            )}\r\n            {provided.placeholder}\r\n          </div>\r\n        }\r\n      </Droppable>\r\n\r\n      <AddListForm\r\n        openButtonName=\"+ Add another card\"\r\n        addButtonName=\"Add card\"\r\n        closeButtonName=\"Close\"\r\n        placeholder=\"Enter card title...\"\r\n        submitFormCallback={submitFormCallback}\r\n        className=\"m-2\"\r\n      />\r\n    </div >\r\n  )\r\n};\r\n\r\nexport default DroppableList;\r\n","import React, { ReactNode, useCallback, useContext, useEffect, useState } from 'react';\r\nimport AddListForm from '../AddListForm';\r\nimport DroppableList from '../DroppableList';\r\nimport Loader from \"react-loader-spinner\";\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport axios from 'axios';\r\nimport { API_URL, AuthContext } from \"../../hooks/useAuth\";\r\nimport { Toast } from 'react-bootstrap';\r\n\r\ntype BoardProps = {\r\n\r\n};\r\n\r\ntype BackendBoardColumns = {\r\n  id: string;\r\n  name: string;\r\n  items: {\r\n    id: string;\r\n    content: string;\r\n  }[];\r\n};\r\n\r\ntype ToastMsg = {\r\n  variant: string;\r\n  message: string;\r\n}\r\n\r\nconst Board = ({ }: BoardProps) => {\r\n  const { authState } = useContext(AuthContext);\r\n  const [columns, setColumns] = useState<BackendBoardColumns[]>([]);\r\n  const [toastNode, setToastNode] = useState<ToastMsg | null>(null);\r\n\r\n  useEffect(() => {\r\n    const dataGetter = async () => {\r\n      console.log(axios.defaults.headers);\r\n      await axios.get(`${API_URL}/board/all`)\r\n        .then(r => {\r\n          const { data } = r;\r\n          setToastNode({\r\n            variant: 'success',\r\n            message: `Board loaded`\r\n          });\r\n        })\r\n        .catch(e => {\r\n          setToastNode({\r\n            variant: 'danger',\r\n            message: `${e}`\r\n          });\r\n        })\r\n    }\r\n    dataGetter();\r\n  }, []);\r\n\r\n\r\n\r\n  const submitFormCallback = useCallback((name: string): Promise<string> =>\r\n    new Promise(async () => {\r\n      const body = { name: name }\r\n      const headers = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        mode: 'cors'\r\n      }\r\n      await axios.post(`${API_URL}/board/all`, body, headers)\r\n        .then(r => {\r\n          const { data } = r;\r\n          setToastNode({\r\n            variant: 'success',\r\n            message: `Added new a list: ${name}`\r\n          });\r\n        })\r\n        .catch(e => {\r\n          setToastNode({\r\n            variant: 'danger',\r\n            message: `${e}`\r\n          });\r\n        })\r\n    }), []);\r\n\r\n  const onDragEnd = useCallback((result) => {\r\n    if (!result.destination) return;\r\n    const { source, destination } = result;\r\n    const newColumns = [...columns];\r\n    if (source.droppableId !== destination.droppableId) {\r\n      const sourceColumn = newColumns.find((e: BackendBoardColumns) => e.name === source.droppableId);\r\n      const destColumn = newColumns.find((e: BackendBoardColumns) => e.name === destination.droppableId);\r\n      const destItems = destColumn?.items;\r\n      //@ts-ignore\r\n      const [removed] = sourceColumn.items.splice(source.index, 1);\r\n      destItems?.splice(destination.index, 0, removed);\r\n    } else {\r\n      const column = newColumns.find((e: BackendBoardColumns) => e.name === source.droppableId);\r\n      column && ([column.items[source.index], column.items[destination.index]] = [column.items[destination.index], column.items[source.index]]);\r\n    }\r\n    setColumns(newColumns);\r\n  }, [columns]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex\">\r\n        {columns.length > 0 ?\r\n          <DragDropContext onDragEnd={result => onDragEnd(result)}>\r\n            {columns.map((column, index) =>\r\n              <DroppableList key={index} id={column.id} name={column.name} items={column.items} />\r\n            )}\r\n          </DragDropContext>\r\n          :\r\n          <Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        }\r\n        <div>\r\n          <AddListForm\r\n            openButtonName=\"+ Add a list\"\r\n            addButtonName=\"Add list\"\r\n            closeButtonName=\"Close\"\r\n            placeholder=\"Enter list title...\"\r\n            submitFormCallback={submitFormCallback}\r\n            className=\"w-[272px] m-2\"\r\n            buttonTextColor=\"text-white\"\r\n          />\r\n          <Toast className=\"!w-[272px] m-2\" bg={toastNode?.variant} onClose={() => setToastNode(null)} show={Boolean(toastNode)} delay={2000} autohide>\r\n            <Toast.Header>\r\n              <strong className=\"me-auto\">Status</strong>\r\n              <small>now</small>\r\n            </Toast.Header>\r\n            <Toast.Body>{toastNode?.message}</Toast.Body>\r\n          </Toast>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Board;\r\nexport type { BackendBoardColumns };\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\nimport Board from '../../components/Board';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <main className=\"bg-trello h-[100vh] w-[fit-content] min-w-full\">\r\n      <Board />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Routes\r\n} from \"react-router-dom\";\r\nimport Login from './containers/Login';\r\nimport Home from './containers/Home';\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"./hooks/useAuth\";\r\n\r\nconst App = () => {\r\n  const { authState } = useContext(AuthContext);\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {authState ? (\r\n          <>\r\n            <Route path='/' element={<Home />} />\r\n            <Route path='/login' element={<Login />} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route path='/' element={<Login />} />\r\n            <Route path='/login' element={<Login />} />\r\n          </>\r\n        )}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useContext } from 'react';\r\nimport { Container, Nav, Navbar, } from 'react-bootstrap';\r\nimport { AuthContext } from '../../hooks/useAuth';\r\n\r\n\r\nconst Navigation = () => {\r\n  const { authState, setAuth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\" className=\"overflow-hidden !fixed w-[100%]\">\r\n      <Container>\r\n        <Navbar.Brand href=\"/\">Tango</Navbar.Brand>\r\n        {authState ?\r\n          <Nav.Link href=\"/login\" onClick={() => setAuth(null)}>Logout</Nav.Link>\r\n          :\r\n          <Nav.Link href=\"/login\">Login</Nav.Link>\r\n        }\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './app_tailwind.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { AuthProvider } from './hooks/useAuth';\nimport Navigation from './containers/Navigation';\n\nReactDOM.render(\n  <AuthProvider>\n    <React.StrictMode>\n      <Navigation />\n      <div className=\"pt-[56px]\">\n        <App />\n      </div>\n    </React.StrictMode>\n  </AuthProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}