{"version":3,"sources":["hooks/useGlobalContext.tsx","containers/Login/index.tsx","containers/BoardList/BoardListElement/index.tsx","containers/BoardList/index.tsx","containers/Home/index.tsx","components/AddListForm/index.tsx","components/TextInput/index.tsx","components/CardModal/index.tsx","components/DroppableList/index.tsx","components/Board/index.tsx","containers/WorkBoard/index.tsx","containers/Registration/index.tsx","App.tsx","reportWebVitals.ts","containers/Navigation/index.tsx","index.tsx"],"names":["TOKEN_ALS_NAME","API_URL","GlobalContextEmpty","authState","setAuth","auth","getAuthState","GlobalContext","createContext","configureAxiosHeaders","axios","defaults","headers","post","token","get","put","ContextProvider","children","useState","setAuthState","useCallback","authDataString","localStorage","getItem","authData","JSON","parse","err","setItem","stringify","error","Promise","reject","useEffect","Provider","value","Login","useContext","status","setStatus","username","setUsername","password","setPassword","navigate","useNavigate","submitJWT","event","a","preventDefault","body","then","r","data","catch","e","Form","onSubmit","className","Group","controlId","Label","Control","autoFocus","type","onChange","target","Button","size","disabled","length","to","variant","BoardsListElement","id","name","onClick","BoardsList","boards","show","setShow","setName","errMsg","setErrMsg","addNewBoardHandler","push","console","log","map","idx","Modal","onHide","Header","closeButton","Title","Body","placeholder","currentTarget","Main","setBoards","AddListForm","openButtonName","addButtonName","closeButtonName","submitFormCallback","buttonTextColor","clicked","setClicked","submitForm","setClickedCallback","state","TextInput","submitCallback","buttonClassName","inputClassName","inputType","elementValue","setListName","submitNameChange","inputElement","onBlur","onKeyDown","key","CardModal","description","cardName","card","onCloseModal","submitChangeNameCallback","submitChangeDescriptionCallback","setDescriptionCallback","setDescription","width","height","as","DroppableList","items","toastNode","setToastNode","submited","setSubmited","selectedCard","setSelectedCard","setCardName","useSearchParams","searchParams","boardID","newName","message","listId","position","newDescription","newCardName","droppableId","provided","droppableProps","ref","innerRef","item","index","draggableId","draggableProps","dragHandleProps","openCardModal","resolve","sort","b","parseInt","finally","Toast","bg","onClose","Boolean","delay","autohide","Board","columns","setColumns","boardName","setBoardName","isLoading","setIsLoading","loadColumns","forEach","column","response","backendUpdateColumn","el","onDragEnd","result","destination","source","newColumns","find","splice","removed","sourceColumn","destColumn","sourceItems","destItems","params","URLSearchParams","window","history","replaceState","toString","color","WorkBoard","Registration","email","setEmail","matchingPassword","setMatchingPassword","isButtonDisabled","App","path","element","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navigation","Navbar","expand","Container","Brand","href","Nav","Link","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9d1543a.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useState, ReactNode, useCallback, useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nconst TOKEN_ALS_NAME = 'auth';\r\nconst API_URL = 'https://146.59.45.158:8080';\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n}\r\ntype Auth = {\r\n  username: string;\r\n  token: string;\r\n}\r\ntype GlobalContextProps = {\r\n  authState: Auth | null;\r\n  setAuth: (auth: Auth | null) => void;\r\n  getAuthState: () => Auth | null;\r\n};\r\n\r\nconst GlobalContextEmpty: GlobalContextProps = {\r\n  authState: null,\r\n  setAuth: (auth: Auth | null) => null,\r\n  getAuthState: () => null,\r\n}\r\n\r\nconst GlobalContext = createContext(GlobalContextEmpty);\r\n\r\nconst configureAxiosHeaders = (auth: Auth) => {\r\n  axios.defaults.headers.post[\"Authorization\"] = auth.token;\r\n  axios.defaults.headers.post[\"Content-Type\"] = 'application/json';\r\n  //axios.defaults.headers.post[\"mode\"] = 'cors';\r\n\r\n  axios.defaults.headers.get[\"Authorization\"] = auth.token;\r\n  //axios.defaults.headers.get[\"mode\"] = 'no-cors';\r\n  axios.defaults.headers.get[\"Content-Type\"] = 'application/json';\r\n\r\n  axios.defaults.headers.put[\"Authorization\"] = auth.token;\r\n};\r\n\r\nconst ContextProvider = ({ children }: Props) => {\r\n  const [authState, setAuthState] = useState<Auth | null>(null);\r\n\r\n  // Get current auth state from AsyncStorage\r\n  const getAuthState = useCallback(() => {\r\n    try {\r\n      const authDataString = localStorage.getItem(TOKEN_ALS_NAME);\r\n      if (!authDataString)\r\n        throw \"No data in local storage\";\r\n      const authData = JSON.parse(authDataString) as Auth;\r\n      // Configure axios headers\r\n      configureAxiosHeaders(authData);\r\n      setAuthState(authData);\r\n\r\n      return authData;\r\n    } catch (err) {\r\n      setAuthState(null);\r\n    }\r\n    return null;\r\n  }, []);\r\n\r\n  // Update AsyncStorage & context state\r\n  const setAuth = useCallback((auth: Auth | null) => {\r\n    try {\r\n      localStorage.setItem(TOKEN_ALS_NAME, JSON.stringify(auth));\r\n      // Configure axios headers\r\n      if (auth)\r\n        configureAxiosHeaders(auth);\r\n      setAuthState(auth);\r\n    } catch (error) {\r\n      setAuthState(null);\r\n      Promise.reject(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAuthState();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{ authState, setAuth, getAuthState }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport { GlobalContext, ContextProvider, TOKEN_ALS_NAME, API_URL };\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Form } from 'react-bootstrap';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { API_URL, TOKEN_ALS_NAME, GlobalContext } from '../../hooks/useGlobalContext'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const { authState, setAuth } = useContext(GlobalContext);\r\n  const [status, setStatus] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const submitJWT = async (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n\r\n    const body = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n    await axios.post(`${API_URL}/public/login`, body)\r\n      .then(r => {\r\n        const { data } = r;\r\n        localStorage.setItem(TOKEN_ALS_NAME, JSON.stringify(data));\r\n        setAuth(data);\r\n        navigate('/tango');\r\n      })\r\n      .catch(e => {\r\n        setStatus('Username or password are invalid');\r\n        setAuth(null);\r\n      });\r\n  };\r\n\r\n  useEffect(() => { authState && navigate('/') }, []);\r\n\r\n  return (\r\n    <Form onSubmit={submitJWT} className=\"bg-trello h-[100vh] w-[100%] flex justify-center flex-col\">\r\n      <div className=\"w-80 mx-auto my-0 flex flex-col align-middle\">\r\n        <Form.Group controlId=\"username\" className=\"p-2 text-white\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\" className=\"p-2 text-white\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button className=\"m-4\" size=\"lg\" type=\"submit\" disabled={!(username.length > 0 && password.length > 0)}>\r\n          Sign-in\r\n        </Button>\r\n        <p className=\"text-center text-white bg-[#ff000066] rounded-lg\">{status}</p>\r\n        <Link to=\"/tango/registration\" className='text-center'>\r\n          <Button className=\"m-4\" size=\"sm\" variant=\"secondary\">\r\n            Create new account\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","\r\nimport React from 'react';\r\nimport { BoardType } from '..';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst BoardsListElement = ({ id, name }: BoardType) => {\r\n    const navigate = useNavigate();\r\n    const buttonElementHandler = (e: React.SyntheticEvent) => {\r\n        navigate(`/tango/board?id=${id}&name=${name}`);\r\n    };\r\n    return (\r\n        <Button onClick={buttonElementHandler} className=\"h-[80px] bg-[#97a0af]\">\r\n            {name}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default BoardsListElement;","\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../../hooks/useGlobalContext'\r\nimport BoardsListElement from './BoardListElement';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Form, Modal } from 'react-bootstrap';\r\ntype BoardsListProps = {\r\n  boards: BoardType[];\r\n};\r\n\r\ntype BoardType = {\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\nconst BoardsList = ({ boards }: BoardsListProps) => {\r\n  const [show, setShow] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [errMsg, setErrMsg] = useState('');\r\n\r\n  const addNewBoardHandler = useCallback((e: React.SyntheticEvent) => new Promise(async () => {\r\n    e.preventDefault();\r\n    await axios.post(`${API_URL}/board`, { name: name })\r\n      .then(r => {\r\n        const { data } = r;\r\n        boards.push(data as BoardType);\r\n        setShow(false);\r\n      })\r\n      .catch(e => { setErrMsg(\"error\"); console.log(e); });\r\n    setName('');\r\n  }), [name]);\r\n\r\n  const onCloseModal = () => {\r\n    setName('');\r\n    setErrMsg('');\r\n    setShow(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-screen-xl mx-auto \">\r\n      <div className=\"p-8 md:p-4 max-w-screen-md mx-auto text-white\"><h3>Boards</h3></div>\r\n      <div className=\"px-8 md:px-4 max-w-screen-md mx-auto grid grid-flow-row gap-3 sm:grid-cols-2 md:grid-cols-4\">\r\n        {boards.map((e, idx) => <BoardsListElement key={idx} id={e.id} name={e.name} />)}\r\n        <Button className=\"h-[80px]\" variant=\"light\" onClick={() => setShow(true)}>Create new board</Button>\r\n      </div>\r\n      <Modal show={show} onHide={onCloseModal} size=\"sm\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Create new board</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={addNewBoardHandler}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control type=\"text\" placeholder=\"Add board title\" onChange={(e) => setName(e.currentTarget.value)} />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Create board\r\n            </Button>\r\n          </Form>\r\n          {errMsg && <p className=\"text-red-500 pt-2 m-0\">{errMsg}</p>}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BoardsList;\r\nexport type { BoardType };","\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { API_URL } from '../../hooks/useGlobalContext'\r\nimport Loader from 'react-loader-spinner';\r\nimport BoardsList, { BoardType } from '../BoardList';\r\n\r\n\r\nconst Main = () => {\r\n  const [boards, setBoards] = useState<BoardType[] | null>(null);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${API_URL}/board/all`)\r\n      .then(r => {\r\n        const { data } = r;\r\n        setBoards(data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        setBoards([]);\r\n      });\r\n  }, []);\r\n\r\n  console.log(boards);\r\n\r\n  return (\r\n    <main className=\"bg-trello h-[100vh] w-[fit-content] min-w-full\">\r\n      {boards === null ? <Loader type=\"Puff\" /> : <BoardsList boards={boards} />}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React, { ReactNode, useCallback, useState } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\ntype AddListButtonProps = {\r\n  openButtonName: string;\r\n  addButtonName: string;\r\n  closeButtonName: string;\r\n  placeholder: string;\r\n  submitFormCallback: (name: string) => Promise<string>;\r\n  className?: string;\r\n  buttonTextColor?: string;\r\n};\r\n\r\nconst AddListForm = ({ openButtonName, addButtonName, closeButtonName, placeholder, submitFormCallback, className, buttonTextColor }: AddListButtonProps) => {\r\n  const [name, setName] = useState('');\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const submitForm = async (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n    await submitFormCallback(name)\r\n      .then(() => {\r\n        setName('');\r\n        setClicked(false);\r\n      })\r\n      .catch(() => { });\r\n  };\r\n\r\n  const setClickedCallback = (state: boolean) => {\r\n    setClicked(state);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitForm} className={className}>\r\n      {!clicked ?\r\n        (\r\n          <button\r\n            className={`!bg-[#ffffff3a] hover:!bg-[#0000009a] btn w-[100%] text-gray-200 ${buttonTextColor}`}\r\n            onClick={() => setClickedCallback(true)}\r\n          >\r\n            {openButtonName}\r\n          </button>\r\n        )\r\n        :\r\n        (\r\n          <div className=\"bg-[#ebecf0] p-1\">\r\n            <Form.Group controlId=\"name\" className=\"m-2\">\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"name\"\r\n                value={name}\r\n                placeholder={placeholder}\r\n                onChange={e => setName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button className=\"m-2\" size=\"sm\" type=\"submit\" disabled={name.length === 0}>\r\n              {addButtonName}\r\n            </Button>\r\n            <Button className=\"m-2\" size=\"sm\" variant=\"danger\" onClick={() => setClickedCallback(false)}>\r\n              {closeButtonName}\r\n            </Button>\r\n          </div>\r\n        )\r\n      }\r\n    </Form >\r\n  )\r\n};\r\n\r\nexport default AddListForm;\r\n","\r\nimport React, { useCallback, useState } from 'react';\r\n\r\ntype TextInputProps = {\r\n  name: string;\r\n  submitCallback: (name: string) => void;\r\n  className?: string;\r\n  buttonClassName?: string;\r\n  inputClassName?: string;\r\n  inputType?: 'text' | 'textarea';\r\n}\r\n\r\nconst TextInput = ({ name, submitCallback, className, buttonClassName, inputClassName, inputType = 'text' }: TextInputProps) => {\r\n  const [elementValue, setListName] = useState(name);\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const submitNameChange = useCallback(async () => {\r\n    submitCallback(elementValue);\r\n    setClicked(false);\r\n  }, [elementValue]);\r\n\r\n  const inputElement = inputType === 'text' ?\r\n    <input className={`w-[100%]  ${inputClassName}`}\r\n      onChange={e => setListName(e.target.value)}\r\n      onSubmit={submitNameChange}\r\n      onBlur={submitNameChange}\r\n      onKeyDown={e => e.key === 'Enter' && submitNameChange()}\r\n      type='text'\r\n      autoFocus\r\n      value={elementValue}\r\n    />\r\n    :\r\n    <textarea className={`w-[100%]  ${inputClassName}`}\r\n      onChange={e => setListName(e.target.value)}\r\n      onSubmit={submitNameChange}\r\n      onBlur={submitNameChange}\r\n      onKeyDown={e => e.key === 'Enter' && submitNameChange()}\r\n      autoFocus\r\n      value={elementValue}\r\n    />;\r\n\r\n  return (\r\n    <div className={`w-[100%] p-2 ${className}`}>\r\n      {!clicked ?\r\n        <button className={`w-[100%] font-bold ${buttonClassName}`} onClick={() => setClicked(true)}>\r\n          {elementValue}\r\n        </button>\r\n        :\r\n        inputElement\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextInput;\r\n","import React from 'react';\r\nimport { Form, Modal } from 'react-bootstrap';\r\nimport TextInput from '../TextInput';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Bookmark, BodyText } from \"react-bootstrap-icons\";\r\nimport { CardContent } from '../Board';\r\n\r\n\r\ntype CardModalProps = {\r\n  readonly show: boolean;\r\n  readonly cardName: string;\r\n  readonly description: string;\r\n  readonly card: CardContent | null;\r\n  readonly errMsg: string;\r\n\r\n  onCloseModal: () => void;\r\n  submitChangeNameCallback: (newCardName: string) => Promise<void>;\r\n  submitChangeDescriptionCallback: (newCardName: string) => Promise<void>;\r\n  setDescriptionCallback: (e: React.SyntheticEvent) => Promise<void>;\r\n  setDescription: (value: React.SetStateAction<string>) => void;\r\n}\r\n\r\nconst CardModal = ({\r\n  show,\r\n  description,\r\n  cardName,\r\n  card,\r\n  errMsg,\r\n  onCloseModal,\r\n  submitChangeNameCallback,\r\n  submitChangeDescriptionCallback,\r\n  setDescriptionCallback,\r\n  setDescription,\r\n}: CardModalProps) => {\r\n\r\n  return (\r\n    <Modal show={show} onHide={onCloseModal} size=\"lg\" >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title className='flex flex-row w-[100%] items-center'>\r\n          <Bookmark width={24} height={24} />\r\n          <TextInput name={cardName} submitCallback={submitChangeNameCallback} buttonClassName=\"text-left\" />\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className='flex flex-row w-[100%] items-center text-xl'>\r\n          <BodyText width={24} height={24} />\r\n          <span className='p-2'>Description</span>\r\n        </div>\r\n\r\n        {card?.description ?\r\n          <div className='ml-6'>\r\n            <TextInput name={description} submitCallback={submitChangeDescriptionCallback} buttonClassName=\"text-left\" inputType='textarea' />\r\n          </div>\r\n          :\r\n          <Form onSubmit={setDescriptionCallback}>\r\n            <Form.Control\r\n              className='mb-3'\r\n              value={description}\r\n              as=\"textarea\" placeholder=\"Add card description\"\r\n              onChange={(e) => setDescription(e.currentTarget.value)}\r\n            />\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save\r\n            </Button>\r\n          </Form>\r\n        }\r\n        {errMsg && <p className=\"text-red-500 pt-2 m-0\">{errMsg}</p>}\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default CardModal;\r\n","import axios, { AxiosError } from 'axios';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { Toast } from 'react-bootstrap';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { API_URL } from '../../hooks/useGlobalContext';\r\nimport AddListForm from '../AddListForm';\r\nimport { BackendBoardColumns, CardContent } from '../Board'\r\nimport TextInput from '../TextInput';\r\nimport CardModal from '../CardModal';\r\n\r\ntype ToastMsg = {\r\n  variant: string;\r\n  message: string;\r\n}\r\n\r\nconst DroppableList = ({ id, name, items }: BackendBoardColumns) => {\r\n  const [toastNode, setToastNode] = useState<ToastMsg | null>(null);\r\n  const [submited, setSubmited] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [errMsg, setErrMsg] = useState('');\r\n\r\n  const [selectedCard, setSelectedCard] = useState<CardContent | null>(null);\r\n  const [description, setDescription] = useState<string>('');\r\n  const [cardName, setCardName] = useState<string>('');\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [boardID, setBoardID] = useState<string | null>(searchParams.get('id'));\r\n\r\n  const submitNameChange = async (newName: string) => {\r\n    await axios.post(`${API_URL}/board/${id}/list`, { name: newName })\r\n      .catch(e => {\r\n        setToastNode({\r\n          variant: 'danger',\r\n          message: `Cannot change the name`\r\n        });\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const submitFormCallback = (name: string): Promise<string> => {\r\n    if (submited)\r\n      throw \"Another form is submiting\";\r\n    setSubmited(true);\r\n    return new Promise((resolve) => {\r\n      setToastNode({\r\n        variant: 'info',\r\n        message: `loading`\r\n      });\r\n      const body = { name: name, description: '' };\r\n      return axios.post(`${API_URL}/board/${boardID}/list/${id}/card`, body)\r\n        .then(r => {\r\n          items ? items.push(r.data) : items = r.data;\r\n          items = items?.sort((a, b) => parseInt(a.position) - parseInt(b.position));\r\n          resolve(name);\r\n        })\r\n        .catch(e => {\r\n          setToastNode({\r\n            variant: 'danger',\r\n            message: `Cannot add item`\r\n          });\r\n        })\r\n        .finally(() => setSubmited(false));\r\n    });\r\n  };\r\n\r\n  const onCloseModal = () => {\r\n    setShow(false);\r\n    setCardName('');\r\n  };\r\n\r\n  const openCardModal = (item: CardContent) => {\r\n    setSelectedCard(item);\r\n    setDescription(item.description);\r\n    setCardName(item.name);\r\n    setShow(true);\r\n  };\r\n\r\n  const setDescriptionCallback = useCallback(async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const body = {\r\n      id: selectedCard?.id,\r\n      description: description,\r\n      listId: selectedCard?.listId,\r\n      position: selectedCard?.position,\r\n      name: cardName,\r\n      state: selectedCard?.state,\r\n    }\r\n    await axios.put(`${API_URL}/board/${boardID}/list/${id}/card/${selectedCard?.id}`, body)\r\n      .then(() => {\r\n        if (selectedCard)\r\n          selectedCard.description = description as string;\r\n        setShow(false);\r\n      })\r\n      .catch(e => {\r\n        setToastNode({\r\n          variant: 'danger',\r\n          message: `Cannot set description`\r\n        });\r\n        console.log(e);\r\n        setShow(false);\r\n      });\r\n  }, [cardName, description]);\r\n\r\n  const submitChangeDescriptionCallback = useCallback(async (newDescription: string) => {\r\n    if (newDescription === selectedCard?.description)\r\n      return;\r\n\r\n    const body = {\r\n      name: selectedCard?.name,\r\n      listId: selectedCard?.listId,\r\n      position: selectedCard?.position,\r\n      description: newDescription,\r\n      state: selectedCard?.state,\r\n    }\r\n    await axios.put(`${API_URL}/board/${boardID}/list/${id}/card/${selectedCard?.id}`, body)\r\n      .then(() => {\r\n        if (selectedCard)\r\n          selectedCard.description = newDescription;\r\n        setDescription(newDescription);\r\n      })\r\n      .catch((e: AxiosError) => {\r\n        setToastNode({\r\n          variant: 'danger',\r\n          message: `Cannot set description`\r\n        });\r\n        setShow(false);\r\n      });\r\n  }, [selectedCard]);\r\n\r\n  const submitChangeNameCallback = useCallback(async (newCardName: string) => {\r\n    if (newCardName === selectedCard?.name)\r\n      return;\r\n\r\n    const body = {\r\n      name: newCardName,\r\n      listId: selectedCard?.listId,\r\n      position: selectedCard?.position,\r\n      description: description,\r\n      state: selectedCard?.state,\r\n    }\r\n    await axios.put(`${API_URL}/board/${boardID}/list/${id}/card/${selectedCard?.id}`, body)\r\n      .then(() => {\r\n        if (selectedCard)\r\n          selectedCard.name = newCardName;\r\n        setCardName(newCardName);\r\n      })\r\n      .catch((e: AxiosError) => {\r\n        setToastNode({\r\n          variant: 'danger',\r\n          message: `Cannot set description`\r\n        });\r\n        setShow(false);\r\n      });\r\n  }, [selectedCard]);\r\n\r\n  return (\r\n    <div className=\"w-[272px] bg-[#ebecf0] m-2 h-[fit-content]\">\r\n      <TextInput name={name} submitCallback={submitNameChange} />\r\n      <Droppable droppableId={`${id}`} key={`${id}${name}`}>\r\n        {provided =>\r\n          <div\r\n            className=\"w-[272px] min-h-[30px]\"\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {items?.map((item, index) =>\r\n              <Draggable\r\n                key={item.id}\r\n                draggableId={`${item.id}`}\r\n                index={index}\r\n              >\r\n                {(provided) =>\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    onClick={() => openCardModal(item)}\r\n                    className=\"bg-white rounded-sm m-2 p-3\"\r\n                  >\r\n                    {item.name}\r\n                  </div>\r\n                }\r\n              </Draggable>\r\n            )}\r\n            {provided.placeholder}\r\n          </div>\r\n        }\r\n      </Droppable>\r\n\r\n      <CardModal\r\n        show={show}\r\n        cardName={cardName}\r\n        description={description}\r\n        card={selectedCard}\r\n        errMsg={errMsg}\r\n        onCloseModal={onCloseModal}\r\n        submitChangeNameCallback={submitChangeNameCallback}\r\n        submitChangeDescriptionCallback={submitChangeDescriptionCallback}\r\n        setDescriptionCallback={setDescriptionCallback}\r\n        setDescription={setDescription}\r\n      />\r\n\r\n      <AddListForm\r\n        openButtonName=\"+ Add another card\"\r\n        addButtonName=\"Add card\"\r\n        closeButtonName=\"Close\"\r\n        placeholder=\"Enter card title...\"\r\n        submitFormCallback={submitFormCallback}\r\n        className=\"m-2\"\r\n      />\r\n\r\n      <Toast className=\"absolute !w-[272px] my-2\" bg={toastNode?.variant} onClose={() => setToastNode(null)} show={Boolean(toastNode)} delay={2000} autohide>\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">Status</strong>\r\n          <small>now</small>\r\n        </Toast.Header>\r\n        <Toast.Body>{toastNode?.message}</Toast.Body>\r\n      </Toast>\r\n    </div >\r\n  )\r\n};\r\n\r\nexport default DroppableList;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport AddListForm from '../AddListForm';\r\nimport DroppableList from '../DroppableList';\r\nimport Loader from \"react-loader-spinner\";\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport axios, { AxiosError } from 'axios';\r\nimport { API_URL } from \"../../hooks/useGlobalContext\";\r\nimport { Toast } from 'react-bootstrap';\r\nimport TextInput from '../TextInput';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { Share } from \"react-bootstrap-icons\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\ntype BoardProps = {\r\n\r\n};\r\ntype CardContent = {\r\n  id: number;\r\n  name: string;\r\n  listId: string;\r\n  position: string;\r\n  description: string;\r\n  state: string;\r\n}\r\n\r\ntype BackendBoardColumns = {\r\n  id: number;\r\n  name: string;\r\n  position: number;\r\n  items?: CardContent[];\r\n};\r\n\r\ntype ToastMsg = {\r\n  variant: string;\r\n  message: string;\r\n}\r\n\r\nconst Board = ({ }: BoardProps) => {\r\n  const navigate = useNavigate();\r\n  const [columns, setColumns] = useState<BackendBoardColumns[]>([]);\r\n  const [toastNode, setToastNode] = useState<ToastMsg | null>(null);\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [boardID, setBoardID] = useState<string | null>(searchParams.get('id'));\r\n  const [boardName, setBoardName] = useState<string | null>(searchParams.get('name'));\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const loadColumns = useCallback(() => {\r\n    columns.forEach(async column => {\r\n      await axios.get(`${API_URL}/board/${boardID}/list/${column.id}/card`)\r\n        .then(r => {\r\n          column.items = r.data;\r\n          column.items?.sort((a, b) => parseInt(a.position) - parseInt(b.position));\r\n          console.log(column);\r\n        })\r\n        .catch((e: AxiosError) => {\r\n          if (e.response?.status !== 500) {\r\n            setToastNode({\r\n              variant: 'danger',\r\n              message: `${e}`\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }, [columns]);\r\n\r\n\r\n  useEffect(() => {\r\n    (!boardID && !boardName) && navigate('/tango');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${API_URL}/board/${boardID}/list`)\r\n      .then(r => {\r\n        const { data } = r;\r\n        setColumns(data);\r\n        setIsLoading(false);\r\n        setToastNode({\r\n          variant: 'success',\r\n          message: `Board loaded`\r\n        });\r\n      })\r\n      .catch(e => {\r\n        setToastNode({\r\n          variant: 'danger',\r\n          message: `${e}`\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadColumns();\r\n  }, [isLoading]);\r\n\r\n  const submitFormCallback = useCallback((name: string): Promise<string> =>\r\n    new Promise(async () => {\r\n      const body = { name: name }\r\n      await axios.post(`${API_URL}/board/${boardID}/list`, body)\r\n        .then(r => {\r\n          const { data } = r;\r\n          setColumns([...columns, data]);\r\n          setToastNode({\r\n            variant: 'success',\r\n            message: `Added new a list: ${name}`\r\n          });\r\n        })\r\n        .catch(e => {\r\n          setToastNode({\r\n            variant: 'danger',\r\n            message: `${e}`\r\n          });\r\n        })\r\n    }), [columns]);\r\n\r\n\r\n  const backendUpdateColumn = (column: BackendBoardColumns) => {\r\n    if (!column.items)\r\n      return;\r\n    column.items.forEach((el, idx) => el.position = `${idx + 1}`);\r\n    column.items.sort((a, b) => parseInt(a.position) - parseInt(b.position));\r\n\r\n    column.items.forEach(async el => {\r\n      await axios.put(`${API_URL}/board/${boardID}/list/${el.listId}/card/${el.id}`, el)\r\n        .catch(e => console.log(e));\r\n    });\r\n  };\r\n\r\n  const onDragEnd = useCallback(async (result) => {\r\n    if (!result.destination)\r\n      return;\r\n\r\n    const { source, destination } = result;\r\n    const newColumns = [...columns];\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      const column = newColumns.find((e: BackendBoardColumns) => `${e.id}` === source.droppableId);\r\n      if (column && column.items) {\r\n        const [removed] = column.items.splice(source.index, 1);\r\n        column.items.splice(destination.index, 0, removed);\r\n        backendUpdateColumn(column);\r\n      }\r\n    }\r\n    else {\r\n      const sourceColumn = newColumns.find((e: BackendBoardColumns) => `${e.id}` === source.droppableId);\r\n      const destColumn = newColumns.find((e: BackendBoardColumns) => `${e.id}` === destination.droppableId);\r\n      const sourceItems = sourceColumn?.items;\r\n      const destItems = destColumn?.items;\r\n\r\n      if (sourceItems && destItems) {\r\n        const [removed] = sourceItems.splice(source.index, 1);\r\n        removed.listId = `${destColumn?.id}`;\r\n        destItems.splice(destination.index, 0, removed);\r\n\r\n        backendUpdateColumn(destColumn);\r\n        backendUpdateColumn(sourceColumn);\r\n      }\r\n    }\r\n    setColumns(newColumns);\r\n  }, [isLoading]);\r\n\r\n  const submitNameChange = useCallback(async (newName: string) => {\r\n    await axios.put(`${API_URL}/board`, { name: newName }, { params: { id: `${boardID}` } })\r\n      .then(() => {\r\n        const params = new URLSearchParams(`id=${boardID}&name=${newName}`);\r\n        window.history.replaceState(null, '', `board?${params.toString()}`);\r\n        setBoardName(newName);\r\n      })\r\n      .catch(e => {\r\n        setToastNode({\r\n          variant: 'danger',\r\n          message: `Cannot change the name`\r\n        });\r\n        console.log(e);\r\n      });\r\n  }, []);\r\n\r\n  const shareBoardClick = () => {\r\n    console.log(1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='flex flex-row items-center'>\r\n        <TextInput name={boardName as string} submitCallback={submitNameChange} className=\"w-[fit-content]\" buttonClassName=\"text-xl text-white\" />\r\n        <Button variant=\"link\" onClick={shareBoardClick}>\r\n          <Share color='white' width={25} height={25} />\r\n        </Button>\r\n      </div>\r\n      <div className=\"flex\">\r\n        {isLoading ?\r\n          <Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n          /> :\r\n          <DragDropContext onDragEnd={result => onDragEnd(result)}>\r\n            {columns.map((column, index) =>\r\n              <DroppableList key={index} id={column.id} name={column.name} position={column.position} items={column.items} />\r\n            )}\r\n          </DragDropContext>\r\n        }\r\n        <div>\r\n          <AddListForm\r\n            openButtonName=\"+ Add a list\"\r\n            addButtonName=\"Add list\"\r\n            closeButtonName=\"Close\"\r\n            placeholder=\"Enter list title...\"\r\n            submitFormCallback={submitFormCallback}\r\n            className=\"w-[272px] m-2\"\r\n            buttonTextColor=\"text-white\"\r\n          />\r\n          <Toast className=\"!w-[272px] m-2\" bg={toastNode?.variant} onClose={() => setToastNode(null)} show={Boolean(toastNode)} delay={2000} autohide>\r\n            <Toast.Header>\r\n              <strong className=\"me-auto\">Status</strong>\r\n              <small>now</small>\r\n            </Toast.Header>\r\n            <Toast.Body>{toastNode?.message}</Toast.Body>\r\n          </Toast>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Board;\r\nexport type { BackendBoardColumns, CardContent };\r\n","\r\nimport React, { useEffect } from 'react';\r\nimport Board from '../../components/Board';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\n\r\nconst WorkBoard = () => {\r\n\r\n  return (\r\n    <main className=\"bg-trello h-[100vh] w-[fit-content] min-w-full\">\r\n      <Board />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default WorkBoard;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Form } from 'react-bootstrap';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { API_URL, TOKEN_ALS_NAME, GlobalContext } from '../../hooks/useGlobalContext'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Registration = () => {\r\n  const { authState, setAuth } = useContext(GlobalContext);\r\n  const [status, setStatus] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [matchingPassword, setMatchingPassword] = useState('');\r\n  const navigate = useNavigate();\r\n  const isButtonDisabled = !(username.length && email.length && password.length && matchingPassword.length);\r\n  useEffect(() => setAuth(null), []);\r\n\r\n  const submitJWT = async (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== matchingPassword) {\r\n      setStatus('Passwords are incorrect');\r\n      return;\r\n    }\r\n\r\n    const body = {\r\n      username: username,\r\n      email: email,\r\n      password: password,\r\n      matchingPassword: matchingPassword,\r\n    };\r\n    await axios.post(`${API_URL}/public/register`, body)\r\n      .then(r => {\r\n        navigate('/tango/login');\r\n      })\r\n      .catch(e => {\r\n        setStatus('Cannot create account');\r\n        setAuth(null);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <Form onSubmit={submitJWT} className=\"bg-trello h-[100vh] w-[100%] flex justify-center flex-col\">\r\n      <div className=\"w-80 mx-auto my-0 flex flex-col align-middle\">\r\n        <Form.Group controlId=\"username\" className=\"p-2 text-white\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"email\" className=\"p-2 text-white\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\" className=\"p-2 text-white\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"matchingPassword\" className=\"p-2 text-white\">\r\n          <Form.Label>Repeat password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={matchingPassword}\r\n            onChange={(e) => setMatchingPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button className=\"m-4\" size=\"lg\" type=\"submit\" disabled={isButtonDisabled}>\r\n          Create account\r\n        </Button>\r\n        <p className=\"text-center text-white bg-[#ff000066] rounded-lg\">{status}</p>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Registration;\r\n","import {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Routes\r\n} from \"react-router-dom\";\r\nimport Login from './containers/Login';\r\nimport Home from './containers/Home';\r\nimport WorkBoard from './containers/WorkBoard';\r\nimport { useContext } from \"react\";\r\nimport { GlobalContext } from \"./hooks/useGlobalContext\";\r\nimport Registration from \"./containers/Registration\";\r\n\r\nconst App = () => {\r\n  const { authState } = useContext(GlobalContext);\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {authState ? (\r\n          <>\r\n            <Route path='/tango' element={<Home />} />\r\n            <Route path='/tango/login' element={<Login />} />\r\n            <Route path='/tango/board' element={<WorkBoard />} />\r\n            <Route path='/tango/registration' element={<Registration />} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route path='/tango' element={<Login />} />\r\n            <Route path='/tango/login' element={<Login />} />\r\n            <Route path='/tango/registration' element={<Registration />} />\r\n          </>\r\n        )}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useContext } from 'react';\r\nimport { Container, Nav, Navbar, } from 'react-bootstrap';\r\nimport { GlobalContext } from '../../hooks/useGlobalContext';\r\n\r\n\r\nconst Navigation = () => {\r\n  const { authState, setAuth } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\" className=\"overflow-hidden !fixed w-[100%]\">\r\n      <Container>\r\n        <Navbar.Brand href=\"/tango\">Tango</Navbar.Brand>\r\n        {authState ?\r\n          <Nav.Link href=\"/tango/login\" onClick={() => setAuth(null)}>Logout</Nav.Link>\r\n          :\r\n          <Nav.Link href=\"/tango\">Login</Nav.Link>\r\n        }\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './app_tailwind.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { ContextProvider } from './hooks/useGlobalContext';\nimport Navigation from './containers/Navigation';\n\nReactDOM.render(\n  <ContextProvider>\n    <React.StrictMode>\n      <Navigation />\n      <div className=\"pt-[56px]\">\n        <App />\n      </div>\n    </React.StrictMode>\n  </ContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}